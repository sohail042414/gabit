<?php

/**
 * This is the model base class for the table "user_roles".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserRoles".
 *
 * Columns in table "user_roles" available as properties of the model,
 * followed by relations of table "user_roles" available as properties of the model.
 *
 * @property integer $id
 * @property string $user_role
 * @property string $created_date
 * @property string $updated_date
 * @property integer $created_by
 * @property integer $updated_by
 * @property string $status
 *
 * @property Users[] $users
 */
abstract class BaseUserRoles extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'user_roles';
    }

    public static function label($n = 1)
    {
        return Yii::t('app', 'UserRoles|UserRoles', $n);
    }

    public static function representingColumn()
    {
        return 'user_role';
    }

    public function rules()
    {
        return array(
            array('user_role, created_date, created_by, updated_by', 'required'),
            array('created_by, updated_by', 'numerical', 'integerOnly' => true),
            array('user_role', 'length', 'max' => 250),
            array('status', 'length', 'max' => 1),
            array('updated_date', 'safe'),
            array('updated_date, status', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, user_role, created_date, updated_date, created_by, updated_by, status', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'users' => array(self::HAS_MANY, 'Users', 'user_type'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'user_role' => Yii::t('app', 'User Role'),
            'created_date' => Yii::t('app', 'Created Date'),
            'updated_date' => Yii::t('app', 'Updated Date'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'status' => Yii::t('app', 'Status'),
            'users' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('user_role', $this->user_role, true);
        $criteria->compare('created_date', $this->created_date, true);
        $criteria->compare('updated_date', $this->updated_date, true);
        $criteria->compare('created_by', $this->created_by);
        $criteria->compare('updated_by', $this->updated_by);
        $criteria->compare('status', $this->status, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}