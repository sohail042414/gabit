<?php

/**
 * This is the model base class for the table "system_role_base_permission".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SystemRoleBasePermission".
 *
 * Columns in table "system_role_base_permission" available as properties of the model,
 * followed by relations of table "system_role_base_permission" available as properties of the model.
 *
 * @property integer $id
 * @property integer $role_id
 * @property integer $controller_id
 * @property integer $action_id
 * @property string $allow_all_actions
 * @property string $status
 *
 * @property SystemActions $action
 * @property SystemControllers $controller
 * @property UserRoles $role
 */
abstract class BaseSystemRoleBasePermission extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'system_role_base_permission';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SystemRoleBasePermission|SystemRoleBasePermissions', $n);
	}

	public static function representingColumn() {
		return 'role';
	}

	public function rules() {
		return array(
			array('role_id, controller_id', 'required'),
			array('role_id, controller_id, action_id', 'numerical', 'integerOnly'=>true),
			array('allow_all_actions, status', 'length', 'max'=>1),
			array('action_id, allow_all_actions, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, role_id, controller_id, action_id, allow_all_actions, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'action' => array(self::BELONGS_TO, 'SystemActions', 'action_id'),
			'controller' => array(self::BELONGS_TO, 'SystemControllers', 'controller_id'),
			'role' => array(self::BELONGS_TO, 'UserRoles', 'role_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'role_id' => null,
			'controller_id' => null,
			'action_id' => null,
			'allow_all_actions' => Yii::t('app', 'Allow All Actions'),
			'status' => Yii::t('app', 'Status'),
			'action' => null,
			'controller' => null,
			'role' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('role_id', $this->role_id);
		$criteria->compare('controller_id', $this->controller_id);
		$criteria->compare('action_id', $this->action_id);
		$criteria->compare('allow_all_actions', $this->allow_all_actions, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}