<?php

/**
 * This is the model base class for the table "fundraiser_questions".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FundraiserQuestions".
 *
 * Columns in table "fundraiser_questions" available as properties of the model,
 * followed by relations of table "fundraiser_questions" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $fundraiser_id
 * @property string $questions_text
 * @property string $created_date
 * @property string $updated_date
 * @property string $status
 *
 * @property FundraiserAnswer[] $fundraiserAnswers
 * @property SetupFundraiser $fundraiser
 * @property Users $user
 */
abstract class BaseFundraiserQuestions extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'fundraiser_questions';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FundraiserQuestions|FundraiserQuestions', $n);
	}

	public static function representingColumn() {
		return 'questions_text';
	}

	public function rules() {
		return array(
			array('user_id, topic_id, questions_text, created_date, status', 'required'),
			array('user_id, topic_id', 'numerical', 'integerOnly'=>true),
			array('status', 'length', 'max'=>1),
			array('updated_date', 'safe'),
			array('updated_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, topic_id, questions_text, created_date, updated_date, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'fundraiserAnswers' => array(self::HAS_MANY, 'FundraiserAnswer', 'questions_id'),
            'topic' => array(self::BELONGS_TO, 'Topic', 'topic_id'),
			'user' => array(self::BELONGS_TO, 'Users', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'topic_id' => null,
			'questions_text' => Yii::t('app', 'Questions Text'),
			'created_date' => Yii::t('app', 'Created Date'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'status' => Yii::t('app', 'Status'),
			'fundraiserAnswers' => null,
			'fundraiser' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('topic_id', $this->topic_id);
		$criteria->compare('fundraiser_id', $this->fundraiser_id);
		$criteria->compare('questions_text', $this->questions_text, true);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}