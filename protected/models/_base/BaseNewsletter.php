<?php

/**
 * This is the model base class for the table "newsletter".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Newsletter".
 *
 * Columns in table "newsletter" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $newsletter_name
 * @property string $Newsletter_email
 * @property string $created_date
 * @property string $updated_date
 * @property string $status
 *
 */
abstract class BaseNewsletter extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'newsletter';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Newsletter|Newsletters', $n);
	}

	public static function representingColumn() {
		return 'newsletter_name';
	}

	public function rules() {
		return array(
			array('newsletter_name, Newsletter_email', 'required'),
			array('newsletter_name, Newsletter_email', 'length', 'max'=>255),
			array('status', 'length', 'max'=>1),
			array('created_date, updated_date', 'safe'),
			array('created_date, updated_date, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, newsletter_name, Newsletter_email, created_date, updated_date, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'newsletter_name' => Yii::t('app', 'Newsletter Name'),
			'Newsletter_email' => Yii::t('app', 'Newsletter Email'),
			'created_date' => Yii::t('app', 'Created Date'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'status' => Yii::t('app', 'Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('newsletter_name', $this->newsletter_name, true);
		$criteria->compare('Newsletter_email', $this->Newsletter_email, true);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}