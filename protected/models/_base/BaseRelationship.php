<?php

/**
 * This is the model base class for the table "relationship".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Relationship".
 *
 * Columns in table "relationship" available as properties of the model,
 * followed by relations of table "relationship" available as properties of the model.
 *
 * @property integer $id
 * @property string $relationship_type
 * @property string $created_date
 * @property string $updated_date
 * @property string $status
 *
 * @property Supporter[] $supporters
 */
abstract class BaseRelationship extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'relationship';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Relationship|Relationships', $n);
	}

	public static function representingColumn() {
		return 'relationship_type';
	}

	public function rules() {
		return array(
			array('relationship_type, created_date', 'required'),
			array('relationship_type', 'length', 'max'=>255),
			array('status', 'length', 'max'=>1),
			array('updated_date', 'safe'),
			array('updated_date, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, relationship_type, created_date, updated_date, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'supporters' => array(self::HAS_MANY, 'Supporter', 'relation_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'relationship_type' => Yii::t('app', 'Relationship Type'),
			'created_date' => Yii::t('app', 'Created Date'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'status' => Yii::t('app', 'Status'),
			'supporters' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('relationship_type', $this->relationship_type, true);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('status', $this->status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}